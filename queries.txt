 // SUCCESSFUL GET COURSE REQUEST
  if($_SERVER['REQUEST_METHOD'] === 'GET') {
    // attempt to query the database
    try {
      // create db query
      $query = $readDB->prepare('SELECT id, title, link, lectures, duration, upload, subscribers, reviews, rating, instructor, levelid, categoryid, priceid FROM course WHERE id = :courseid');
      $query->bindParam(':courseid', $courseid, PDO::PARAM_INT);
  		$query->execute();

      // get row count
      $rowCount = $query->rowCount();

      // create course array to store returned course
      $courseArray = array();

      if($rowCount === 0) {
        // set up response for unsuccessful return
        $response = new Response();
        $response->setHttpStatusCode(404);
        $response->setSuccess(false);
        $response->addMessage("Course not found");
        $response->send();
        exit;
      }

      // for each row returned
      while($row = $query->fetch(PDO::FETCH_ASSOC)) {
        // create new course object for each row
        $course = new Course($row['id'], $row['title'], $row['link'], $row['lectures'], $row['duration'], $row['upload'], $row['subscribers'], $row['reviews'], $row['rating'], $row['instructor'], $row['levelid'], $row['categoryid'], $row['priceid']);

        // create course and store in array for return in json data
  	    $courseArray[] = $course->returnCourseAsArray();
      }

      // bundle courses and rows returned into an array to return in the json data
      $returnData = array();
      $returnData['rows_returned'] = $rowCount;
      $returnData['courses'] = $courseArray;

      // set up response for successful return
      $response = new Response();
      $response->setHttpStatusCode(200);
      $response->setSuccess(true);
      $response->toCache(true);
      $response->setData($returnData);
      $response->send();
      exit;
    }
    // if error with sql query return a json error
    catch(CourseException $ex) {
      $response = new Response();
      $response->setHttpStatusCode(500);
      $response->setSuccess(false);
      $response->addMessage($ex->getMessage());
      $response->send();
      exit;
    }
    catch(PDOException $ex) {
      error_log("Database Query Error: ".$ex, 0);
      $response = new Response();
      $response->setHttpStatusCode(500);
      $response->setSuccess(false);
      $response->addMessage("Failed to get course");
      $response->send();
      exit;
    }
	
	
	
	
	
	
	
	// GET ALL COURSES - not sure where I am going wrong
elseif(empty($_GET)) {
  if($_SERVER['REQUEST_METHOD'] === 'GET') {

    // attempt to query the database
    try {
      // create db query
      $query = $readDB->prepare('SELECT id, title, link, lectures, duration, upload, subscribers, reviews, rating, instructor, levelid, categoryid, priceid from course');
      $query->execute();

      // get row count
      $rowCount = $query->rowCount();

      // create course array to store returned courses
      $courseArray = array();

      // for each row returned
      while($row = $query->fetch(PDO::FETCH_ASSOC)) {
        // create new course object for each row
        $course = new Course($row['id'], $row['title'], $row['link'], $row['lectures'], $row['duration'], $row['upload'], $row['subscribers'], $row['reviews'], $row['rating'], $row['instructor'], $row['levelid'], $row['categoryid'], $row['priceid']);

        // create course and store in array for return in json data
        $courseArray[] = $course->returncourseAsArray();
      }

      // bundle courses and rows returned into an array to return in the json data
      $returnData = array();
      $returnData['rows_returned'] = $rowCount;
      $returnData['courses'] = $courseArray;

      // set up response for successful return
      $response = new Response();
      $response->setHttpStatusCode(200);
      $response->setSuccess(true);
      $response->toCache(true);
      $response->setData($returnData);
      $response->send();
      exit;
    }
    // if error with sql query return a json error
    catch(courseException $ex) {
      $response = new Response();
      $response->setHttpStatusCode(500);
      $response->setSuccess(false);
      $response->addMessage($ex->getMessage());
      $response->send();
      exit;
    }
    catch(PDOException $ex) {
      error_log("Database Query Error: ".$ex, 0);
      $response = new Response();
      $response->setHttpStatusCode(500);
      $response->setSuccess(false);
      $response->addMessage("Failed to get courses");
      $response->send();
      exit;
    }
  }
  
  // if any other request method apart from GET or POST is used then return 405 method not allowed
  else {
    $response = new Response();
    $response->setHttpStatusCode(405);
    $response->setSuccess(false);
    $response->addMessage("Request method not allowed");
    $response->send();
    exit;
  } 
}
// return 404 error if endpoint not available
else {
  $response = new Response();
  $response->setHttpStatusCode(404);
  $response->setSuccess(false);
  $response->addMessage("Endpoint not found");
  $response->send();
  exit;
}

	
	
	// GET CATEGORY ID REQUEST
	e.g between 1 and 4
	
	



